{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","React","createElement","type","checked","complete","onChange","id","name","TodoList","todos","map","key","LOCAL_STORAGE_KEY","App","_useState","useState","_useState2","_slicedToArray","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","filter","length","ref","onClick","e","current","value","console","log","prevTodos","concat","_toConsumableArray","uuidv4","newTodos","find","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kJAEe,SAASA,EAAIC,GAAuB,IAApBC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAMjC,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,aACID,IAAAC,cAAA,SAAOC,KAAK,WAAWC,QAASL,EAAKM,SAAUC,SAPvD,WACIN,EAAWD,EAAKQ,OAOXR,EAAKS,OCRH,SAASC,EAAQX,GAAwB,IAArBY,EAAKZ,EAALY,MAAOV,EAAUF,EAAVE,WACxC,OAAQU,EAAMC,IAAI,SAAAZ,GACR,OAAOE,IAAAC,cAACL,EAAI,CAACe,IAAKb,EAAKQ,GAAIP,WAAYA,EAAYD,KAAMA,kBCF/Dc,EAAoB,iBAkDXC,MAhDf,WAAe,IAAAC,EACaC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BL,EAAKO,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAcC,mBAmCpB,OAhCAC,oBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQd,IAChDU,GAAaJ,EAASI,IACzB,IAGHD,oBAAU,WACRI,aAAaE,QAAQf,EAAmBW,KAAKK,UAAUnB,KACtD,CAACA,IAyBFT,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,IACA7B,IAAAC,cAAA,WAAMQ,EAAMqB,OAAO,SAAAhC,GAAI,OAAKA,EAAKM,WAAU2B,OAAO,eAClD/B,IAAAC,cAAA,SAAO+B,IAAKb,EAAajB,KAAK,SAC9BF,IAAAC,cAAA,UAAQgC,QAnBZ,SAAuBC,GACrB,IAAM3B,EAAOY,EAAYgB,QAAQC,MACpB,KAAT7B,IACJ8B,QAAQC,IAAI/B,GACZW,EAAS,SAAAqB,GACP,SAAAC,OAAAC,YAAWF,GAAS,CAAE,CAAEjC,GAAIoC,cAAUnC,KAAMA,EAAMH,UAAU,OAE9De,EAAYgB,QAAQC,MAAQ,QAYM,YAChCpC,IAAAC,cAAA,UAAQgC,QAVZ,WACE,IAAMU,EAAWlC,EAAMqB,OAAO,SAAAhC,GAAI,OAAKA,EAAKM,WAC5Cc,EAASyB,KAQ4B,yBACnC3C,IAAAC,cAACO,EAAQ,CAACC,MAAOA,EAAOV,WA5B5B,SAAoBO,GAClB,IAAMqC,EAAQF,YAAOhC,GACfX,EAAO6C,EAASC,KAAK,SAAA9C,GAAI,OAAIA,EAAKQ,KAAOA,IAC/CR,EAAKM,UAAYN,EAAKM,SACtBc,EAASyB,QCpBAE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,IAAAC,cAACD,IAAMkD,WAAU,KACflD,IAAAC,cAACY,EAAG","file":"static/js/main.9b4e22e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(todo.id)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <label>\r\n            <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\r\n            {todo.name}\r\n        </label>\r\n        \r\n      </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (todos.map(todo => {\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todosApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  //storing todos\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  //getting todos\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddToDo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    console.log(name)\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <> {/*begin jsx fragment - let's you add more html/jsx tags in the same return\"*/}\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddToDo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed Todos</button>\n      <TodoList todos={todos} toggleTodo={toggleTodo} /> \n    </> //end fragment}\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}